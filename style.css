/* Add your CSS styles here */
/* For example, you can change the background color of the body */
body {
  background-color: lightblue;
}

/* To center the text inside the container div, use the text-align property with the value "center" */
.container {
  text-align: center;
font-family: Verdana, Geneva, Tahoma, sans-serif;
}
.container2 {
  text-align: center;
font-family: Verdana, Geneva, Tahoma, sans-serif;
}

/* To make a smooth home page, you can use CSS transitions to add some animation effects to your elements */
/* For example, you can make the button grow bigger when you hover over it */
button {
  padding: 10px 20px;
  border: none;
  background-color: green;
  color: white;
  font-size: 20px;
  text-align: center;
  cursor: pointer;
  /* Add a transition property to specify the duration and easing of the animation */
  transition: transform 0.3s ease-in-out;
}


/* Use the :hover pseudo-class to change the style of the button when you hover over it */
button:hover {
  /* Use the transform property to scale up the button by 10% */
  transform: scale(1.5);
}

/* To make a smooth ranks page, you can use CSS grid or flexbox to create a responsive layout for your elements */
/* For example, you can use grid to create a three-column layout for your ranks */
.ranks {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 40px;
}

/* Use media queries to change the layout on smaller screens */
@media screen and (max-width: 768px) {
  .ranks {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media screen and (max-width: 480px) {
  .ranks {
    grid-template-columns: repeat(10, 10fr);
  }
}

/* Style each rank card with some padding, border, and background color */
.rank {
  padding: 20px;
  border: 3px solid black;
  background-color: white;
}

/* Add some content to each rank card, such as an image, a title, and a description */
.rank img {
  width: 100%;
}

.rank h3 {
  margin-top: 10px;
}

.rank p {
  margin-bottom: 10px;
}

/* To make a smooth info page, you can use CSS typography and spacing techniques to create a readable and attractive content */
/* For example, you can use font-family, font-size, line-height, color, margin, and padding properties to style your text */
.info {
  max-width: 800px;
  margin: auto;
}

.info h2 {
  font-family: Arial, Helvetica, sans-serif;
  font-size: 32px;
  color: darkblue;
}

.info p {
  font-family: Verdana, Geneva, Tahoma, sans-serif;
  font-size: 18px;
  line-height: 1.5;
}

.info h2 + p {
 /* Use the adjacent sibling selector (+) to add some margin between a heading and a paragraph */
 margin-top: 20px; 
}

.info p + p {
 /* Use the adjacent sibling selector (+) to add some padding between two paragraphs */
 padding-top: 10px; 
}
